#
# Component generated by Impac! Widget Generator!
#
module = angular.module('impac.components.widgets-layouts.table', [])
module.controller('WidgetTableCtrl', ($scope, $q, $filter, ImpacWidgetsSvc) ->

  w = $scope.widget

  # Define settings
  # --------------------------------------
  $scope.orgDeferred = $q.defer()
  $scope.timePeriodDeferred = $q.defer()

  settingsPromises = [
    $scope.orgDeferred.promise,
    $scope.timePeriodDeferred.promise
  ]

  # Configure the commonTimePeriodInfo directive
  $scope.timePeriodInfoParams = {
    accountingBehaviour: 'pnl'
    histParams: {}
  }

  # Widget specific methods
  # --------------------------------------
  w.initContext = ->
    $scope.table = _.get(w, 'content.table', {})
    return unless $scope.isDataFound = !_.isEmpty($scope.table.rows)
    $scope.currency = _.get(w, 'metadata.currency')
    $scope.unCollapsed = _.get(w, 'metadata.unCollapsed') || []
    $scope.timePeriodInfoParams.histParams = _.get(w, 'metadata.hist_parameters', {})
    return

  $scope.onToggleCollapsed = ({ unCollapsed }) ->
    $scope.unCollapsed = unCollapsed
    ImpacWidgetsSvc.updateWidgetSettings(w,false)

  # Mini-settings objects
  # handles the saving of collapsed / uncollapsed list groups.
  # --------------------------------------
  unCollapsedSetting = {}
  unCollapsedSetting.initialized = false

  unCollapsedSetting.initialize = ->
    unCollapsedSetting.initialized = true

  unCollapsedSetting.toMetadata = ->
    {unCollapsed: $scope.unCollapsed}

  w.settings.push(unCollapsedSetting)

  # Widget is ready: can trigger the "wait for settings to be ready"
  # --------------------------------------
  $scope.widgetDeferred.resolve(settingsPromises)
)
module.directive('widgetTable', ->
  return {
    restrict: 'A',
    controller: 'WidgetTableCtrl'
  }
)
